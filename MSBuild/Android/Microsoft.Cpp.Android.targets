<!--
***********************************************************************************************
(c) 2011 Gavin Pugh http://www.gavpugh.com/ - Released under the open-source zlib license
***********************************************************************************************
-->

<!-- Largely based on: MSBuild\Microsoft.Cpp\v4.0\Platforms\Win32\Microsoft.Cpp.Win32.targets -->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(VCTargetsPath)\Platforms\Android\ImportBefore\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\Android\ImportBefore')" />
  <Import Project="$(VCTargetsPath)\Microsoft.CppCommon.targets" />

  <UsingTask TaskName="GCCCompile" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="GCCLink" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="GCCLib" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="AntBuild" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />


  <PropertyGroup>
    <!-- Enable incremental build by enable file tracking in tasks-->
    <TrackFileAccess Condition="'$(TrackFileAccess)' == ''">true</TrackFileAccess>
  </PropertyGroup>



  <!-- *******************************************************************************************
        CLCompile
       ******************************************************************************************* -->

  <Target Name="ClCompile"
          Condition="'@(ClCompile)' != ''"
          DependsOnTargets="SelectClCompile">

    <ItemGroup>
      <ClCompile>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.c')">CompileAsC</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.s')">CompileAsAsm</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.asm')">CompileAsAsm</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and ('%(ClCompile.Extension)' != '.c' and '%(ClCompile.Extension)' != '.s' and '%(ClCompile.Extension)' != '.asm'))">CompileAsCpp</CompileAs>
        <MinimalRebuildFromTracking   Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</MinimalRebuildFromTracking>
      </ClCompile>
    </ItemGroup>

    <!-- Disable thumb switch for x86 builds -->
    <ItemGroup Condition="'$(PlatformToolsetVersion)' == 'x86-4.4.3'">
      <ClCompile>
        <ThumbMode>ignore</ThumbMode>
      </ClCompile>
    </ItemGroup>

    <GCCCompile Condition="'%(ClCompile.ExcludedFromBuild)'!='true'"
        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        Sources                            ="@(ClCompile)"

        TrackerLogDirectory                ="%(ClCompile.TrackerLogDirectory)"

        TLogReadFiles                      ="@(CLTLogReadFiles)"
        TLogWriteFiles                     ="@(CLTLogWriteFiles)"
        ToolExe                            ="$(CLToolExe)"
        ToolPath                           ="$(CLToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(ClCompile.MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes         ="%(ClCompile.AcceptableNonZeroExitCodes)"

        EchoCommandLines                   ="%(ClCompile.EchoCommandLines)"
        GCCToolPath                        ="$(GccCompiler)"
        PropertyXmlFile                    ="$(VCTargetsPath)\Platforms\Android\Props\android_gcc_compile.xml"
    >
    </GCCCompile>

  </Target>



  <!-- *******************************************************************************************
        Lib
       ******************************************************************************************* -->

  <!-- Lib script based on: MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets -->

  <Target Name="Lib"
          Condition="'@(Lib)' != ''">
    
    <ItemGroup>
      <Lib>
        <MinimalRebuildFromTracking Condition="'%(Lib.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </Lib>
    </ItemGroup>

    <GCCLib
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
		    Sources                        ="@(Lib)"

        OutputFile                     ="%(Lib.OutputFile)"

        TrackerLogDirectory            ="%(Lib.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LIBTLogReadFiles)"
        TLogWriteFiles                 ="@(LIBTLogWriteFiles)"
        ToolExe                        ="$(LIBToolExe)"
        ToolPath                       ="$(LIBToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="%(Lib.MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Lib.AcceptableNonZeroExitCodes)"

        EchoCommandLines               ="%(Lib.EchoCommandLines)"
        GCCToolPath                    ="$(GccLibrarian)"
        PropertyXmlFile                ="$(VCTargetsPath)\Platforms\Android\Props\android_gcc_lib.xml"
      >
      	<Output TaskParameter="SkippedExecution" PropertyName="LibSkippedExecution" />
    </GCCLib>

    <Message Condition="'$(LibSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
    
  </Target>
  


  <!-- *******************************************************************************************
        Link
       ******************************************************************************************* -->

  <Target Name="Link"
          Condition="'@(Link)' != ''">

    <PropertyGroup>
      <Link_MinimalRebuildFromTracking Condition="'@(Link->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Link_MinimalRebuildFromTracking>
    </PropertyGroup>

    <ItemGroup>
      <Link>
        <SystemLibraryDirectories Condition="'%(Link.LinkGccLibThumb)' == 'true'">%(Link.SystemLibraryDirectories);$(GccLibPath_Thumb)</SystemLibraryDirectories>
        <SystemLibraryDirectories Condition="'%(Link.LinkGccLibThumb)' != 'true'">%(Link.SystemLibraryDirectories);$(GccLibPath)</SystemLibraryDirectories>

        <StlLibs Condition="'%(Link.LinkGccLibThumb)' == 'true'">$(GccLibPath_Thumb)\crtbegin.o;%(Link.StlLibs)</StlLibs>
        <StlLibs Condition="'%(Link.LinkGccLibThumb)' != 'true'">$(GccLibPath)\crtbegin.o;%(Link.StlLibs)</StlLibs>        
      </Link>
    </ItemGroup>
    
    <GCCLink
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(Link)"

        OutputFile                     ="%(Link.OutputFile)"
        
        TrackerLogDirectory            ="%(Link.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LinkTLogReadFiles)"
        TLogWriteFiles                 ="@(LinkTLogWriteFiles)"
        ToolExe                        ="$(LinkToolExe)"
        ToolPath                       ="$(LinkToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Link_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Link.AcceptableNonZeroExitCodes)"

        EchoCommandLines               ="%(Link.EchoCommandLines)"        
        GCCToolPath                    ="$(GccLinker)"        
        PropertyXmlFile                ="$(VCTargetsPath)\Platforms\Android\Props\android_gcc_link.xml"
    >
      <Output TaskParameter="SkippedExecution" PropertyName="LinkSkippedExecution" />
    </GCCLink>

    <Message Condition="'$(LinkSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
    
  </Target>



  <!-- *******************************************************************************************
        AntBuild
       ******************************************************************************************* -->

  <!-- Hook in Ant Build if this is an application project -->
  <PropertyGroup Condition="'$(ConfigurationType)'=='Application'">
    <BuildLinkTargets>
      $(BuildLinkTargets);
      _BuildApk;
    </BuildLinkTargets>
    <BuildLinkAction>$(CommonBuildOnlyTargets);$(BeforeBuildLinkTargets);$(BuildLinkTargets);$(AfterBuildLinkTargets)</BuildLinkAction>
  </PropertyGroup>
  
  <Target Name="_AddAntBuild"
          DependsOnTargets="Link;">
    <ItemGroup>
      <AntBuild Include="$(TargetPath)"/>
    </ItemGroup>
  </Target>
  
  <Target Name="_BuildApk"
          DependsOnTargets="Link;_AddAntBuild;AntBuild;">
  </Target>
  
  <Target Name="AntBuild"
          Condition="'@(AntBuild)' != ''">

    <PropertyGroup>
      <AntBuild_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</AntBuild_MinimalRebuildFromTracking>
      <AntBuild_MinimalRebuildFromTracking Condition="'$(AntBuild_MinimalRebuildFromTracking)' == ''">true</AntBuild_MinimalRebuildFromTracking>
    </PropertyGroup>
    
    <AntBuild
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(AntBuild)"
        
        AntBuildPath                   ="%(AntBuild.AntBuildPath)"
        AntAndroidSdkPath              ="$(AndroidSdkDir)"
        AntJavaHomePath                ="$(JavaHomeDir)"
        AntBuildType                   ="%(AntBuild.AntBuildType)"
        AntLibraryName                 ="%(AntBuild.AntLibraryName)"
        JVMHeapInitial                 ="%(AntBuild.JVMHeapInitial)"
        JVMHeapMaximum                 ="%(AntBuild.JVMHeapMaximum)"
        
        TrackerLogDirectory            ="%(AntBuild.TrackerLogDirectory)"

        TLogReadFiles                  ="@(AntBuildTLogReadFiles)"
        TLogWriteFiles                 ="@(AntBuildTLogWriteFiles)"
        ToolExe                        ="$(AntBuildToolExe)"
        ToolPath                       ="$(AntBuildToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(AntBuild_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(AntBuild.AcceptableNonZeroExitCodes)"

        GCCToolPath                    ="$(AntBatPath)"
    >
      <Output TaskParameter="SkippedExecution" PropertyName="AntBuildSkippedExecution" />
      <Output TaskParameter="OutputFile" PropertyName="ApkPath" />
      <Output TaskParameter="PackageName" PropertyName="PackageName" />
      <Output TaskParameter="ActivityName" PropertyName="ActivityName" />
    </AntBuild>

    <!-- Deploy to device -->
    <Message Condition="'$(AntBuildSkippedExecution)' == 'false' and '%(AntBuild.AntDeploy)' != 'None'"
      Text="Deploying $(ApkPath)..."
      Importance="High">
    </Message>

    <Exec Condition="'$(AntBuildSkippedExecution)' == 'false' and '%(AntBuild.AntDeploy)' != 'None'" 
      WorkingDirectory="%(AntBuild.AntBuildPath)" 
		  Command="&quot;$(AndroidAdbPath)&quot; %(AntBuild.AdbDeployAddCmdLine) install -r $(ApkPath)">      
    </Exec>

    <!-- Run on device -->
    <Message Condition="'$(AntBuildSkippedExecution)' == 'false' and '%(AntBuild.AntDeploy)' == 'DeployAndRun'"
      Text="Running $(PackageName)/$(ActivityName)..."
      Importance="High">
    </Message>

    <Exec Condition="'$(AntBuildSkippedExecution)' == 'false' and '%(AntBuild.AntDeploy)' == 'DeployAndRun'"
      WorkingDirectory="%(AntBuild.AntBuildPath)"
		  Command="&quot;$(AndroidAdbPath)&quot; %(AntBuild.AdbRunAddCmdLine) shell am start -n $(PackageName)/$(ActivityName)">
    </Exec>
    
  </Target>
  
  

  <PropertyGroup>
    <PrepareForBuildDependsOn>PlatformPrepareForBuild;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
    <PrepareForBuildDependsOn Condition="'$(ConfigurationType)'=='Application'">PlatformPrepareForBuild;PlatformPrepareForBuild_AntBuild;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
  </PropertyGroup>



  <!-- Override the Microsoft.CppBuild.targets stuff -->
  <Import Project="$(VCTargetsPath)\Platforms\Android\vs-android.CppBuild.targets" />
  
	
	
  <!-- *******************************************************************************************
        PlatformPrepareForBuild target
       ******************************************************************************************* -->
  
  <Target Name="PlatformPrepareForBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">

    <PropertyGroup>
      <CRLF>%0D%0A</CRLF>
      <NDKMissing>Could not find the Android NDK, check that your ANDROID_NDK_ROOT path is correct!$(CRLF)It's currently: '$(AndroidNdkDir)'</NDKMissing>
      <NDKDownload>The NDK can be downloaded at this URL:$(CRLF)http://developer.android.com/sdk/ndk/index.html</NDKDownload>
      <NDKMissingToolchain>Possibly the toolchain '$(PlatformToolset)' does not exist in this version of the NDK.</NDKMissingToolchain>
    </PropertyGroup>

    <!-- Error out if the project references a missing platform toolset -->
    <VCMessage Code="MSB8008" Type="Error" Arguments="$(PlatformToolset)" Condition="!(exists('$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets'))"/>

    <!-- Android NDK Checks -->
    <Error Condition="!exists('$(AndroidNdkDir)')"             
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)"></Error>
    <Error Condition="!exists('$(GccToolsPath)\$(GccCompiler)')"  
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)$(CRLF)$(NDKMissingToolchain)"></Error>
    <Error Condition="!exists('$(GccToolsPath)\$(GccLibrarian)')" 
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)$(CRLF)$(NDKMissingToolchain)"></Error>
    <Error Condition="!exists('$(GccToolsPath)\$(GccLinker)')"    
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)$(CRLF)$(NDKMissingToolchain)"></Error>

    <!-- x86 vs arm Checks -->
    <Error Condition="'$(PlatformShortName)' == 'x86' and '$(AndroidArch)' != 'x86'" 
           Text="Architecture must be set to x86 for the x86 toolchain!"></Error>
    <Error Condition="'$(PlatformShortName)' == 'arm' and '$(AndroidArch)' == 'x86'" 
           Text="Architecture must be set to arm for the arm toolchain!"></Error>

    <!-- NDK r7 check -->
    <Error Condition="!exists('$(AndroidNdkDir)\sources\cxx-stl\gnu-libstdc++\libs\$(ArchStlDirName)\libgnustl_static.a')"
           Text="vs-android requires at least the r7 version of the NDK installed."></Error>

    <Warning Condition="'$(AndroidStlType)' != 'none' and '$(AndroidArch)' == 'x86'"
           Text="The x86 toolchain doesn't seem to play nice with the STL, or C++ features. Use at your own risk."></Warning>
    
  </Target>

  <Target Name="PlatformPrepareForBuild_AntBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">

    <PropertyGroup>
      <CRLF>%0D%0A</CRLF>
      <SDKMissing>Could not find the Android SDK. Have you run the SDK Manager? Try setting the ANDROID_HOME environment variable to the SDK root.</SDKMissing>
      <SDKDownload>The Android SDK can be downloaded at this URL:$(CRLF)http://developer.android.com/sdk/index.html</SDKDownload>
      <JavaMissing>Could not find the Java installation, check that your JAVA_HOME path is correct!$(CRLF)It's currently: '$(JavaHomeDir)'</JavaMissing>
      <JavaDownload>The Java JDK can be downloaded at this URL:$(CRLF)http://www.oracle.com/technetwork/java/javase/downloads/index.html$(CRLF)Be sure to download the 32-bit version (x86) of the JDK, even if you're running 64-bit Windows.</JavaDownload>
      <AntMissing>Could not find the Apache Ant installation, check that your ANT_HOME path is correct!$(CRLF)It's currently: '$(AntDir)'</AntMissing>
      <AntDownload>Apache Ant can be downloaded at this URL:$(CRLF)http://ant.apache.org/</AntDownload>
    </PropertyGroup>
    
    <!-- .apk building needs all of these -->
    
    <!-- Android SDK Checks -->
    <Error Condition="!exists('$(AndroidSdkDir)')"    Text="$(SDKMissing)$(CRLF)$(SDKDownload)"></Error>
    <Error Condition="!exists('$(AndroidAdbPath)')"   Text="$(SDKMissing)$(CRLF)$(SDKDownload)"></Error>

    <!-- Java Home Checks -->
    <Error Condition="!exists('$(JavaCompilerPath)')" Text="$(JavaMissing)$(CRLF)$(JavaDownload)"></Error>

    <!-- Apache Ant Checks -->
    <Error Condition="!exists('$(AntDir)')"       Text="$(AntMissing)$(CRLF)$(AntDownload)"></Error>
    <Error Condition="!exists('$(AntBatPath)')"   Text="$(AntMissing)$(CRLF)$(AntDownload)"></Error>

  </Target>
	

  <Import Project="$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets" Condition="(exists('$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets'))" />
  <Import Project="$(VCTargetsPath)\Platforms\Android\ImportAfter\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\Android\ImportAfter')" />
</Project>



