<?xml version="1.0" encoding="utf-8"?>
<!--
***********************************************************************************************
(c) 2012 Gavin Pugh http://www.gavpugh.com/ - Released under the open-source zlib license
***********************************************************************************************

This file is android_gcc_compile.xml:

  Parsed *only* by Visual Studio internal engine.
  Specifies Visual Studio's Properties user interface (see FullName and Description attributes).
  Generates the command line switches for the Visual C++ Intellisense internal compiler,
  to enable correct Intellisense support.

For the file influencing actual gcc and clang command lines, see android_gcc_compile_tool.xml.

-->

<!-- Based on script: MSBuild\Microsoft.Cpp\v4.0\1033\cl.xml -->

<Rule Name="CL" PageTemplate="tool" DisplayName="C/C++" SwitchPrefix="/" Order="10" xmlns="http://schemas.microsoft.com/build/2009/properties" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <Rule.Categories>    
    <Category Name="General" DisplayName="General" />
    <Category Name="Optimization" DisplayName="Optimization" />
    <Category Name="Preprocessor" DisplayName="Preprocessor" />
    <Category Name="Code Generation" DisplayName="Code Generation" />
    <Category Name="Language" DisplayName="Language" />
    <Category Name="Precompiled Headers" DisplayName="Precompiled Headers" />
    <Category Name="Output Files" DisplayName="Output Files" />
    <Category Name="Advanced" DisplayName="Advanced" />
    <Category Name="Command Line" DisplayName="Command Line" Subtype="CommandLine" />
  </Rule.Categories>
  <Rule.DataSource>
    <DataSource Persistence="ProjectFile" ItemType="ClCompile" Label="" HasConfigurationCondition="true" />
  </Rule.DataSource>

  <!-- Hidden properties to influence Intellisense parsing -->
  <StringListProperty Subtype="file" Name="IntellisenseForcedIncludeFiles" Category="General" Visible="false" Switch="FI" />

  <!--
    This property affects *only* Intellisense parsing. It is *not* passed to the compiler.
    It must remain in the beginning of this file to allow the user to override it.
  -->
  <StringListProperty Name="IntellisensePreprocessorDefinitions" Category="General" Visible="false" Switch="D" />

  <!--
    This property affects Intellisense parsing, however it is also passed to the compiler (see android_gcc_compile_tool.xml).
    It must remain in the beginning of this file to allow the user to override it.
  -->
  <StringListProperty Name="ToolsetPreprocessorDefinitions" Category="General" Visible="false" Switch="D" />

  <!-- General -->
  <StringListProperty Subtype="folder" Name="AdditionalIncludeDirectories" DisplayName="Additional Include Directories" Category="General" Switch="I" />
  <StringListProperty Subtype="folder" Name="AdditionalUserIncludeDirectories" DisplayName="Additional User Include Directories" Category="General" Switch="I" />
  <BoolProperty Name="GenerateDebugInformation" DisplayName="Generate Debug Info" Category="General" />
  <EnumProperty Name="Warnings" DisplayName="Warnings" Category="General">
    <EnumValue Name="DisableAllWarnings" DisplayName="Disable All Warnings" />
    <EnumValue Name="NormalWarnings" DisplayName="Enable Normal Warnings" />
    <EnumValue Name="AllWarnings" DisplayName="Enable All Warnings" />
  </EnumProperty>  
  <BoolProperty Name="WarningsAsErrors" DisplayName="Treat Warnings as Errors" Category="General" />
  <!-- Equivalent to NDK variable LOCAL_DISABLE_FORMAT_STRING_CHECKS -->
  <EnumProperty Name="FormatWarnings" DisplayName="Format String Warnings" Category="General" Description="Check calls to printf and scanf, etc., to make sure that the arguments supplied have types appropriate to the format string specified, and that the conversions specified in the format string make sense.">
    <EnumValue Name="Disable" DisplayName="Disable" />
    <EnumValue Name="Warning" DisplayName="Warning" />
    <EnumValue Name="Error" DisplayName="Error" />
  </EnumProperty>
  <EnumProperty Name="FormatSecurityWarnings" DisplayName="Format String Security Warnings" Category="General" Description="Warns about uses of format functions that represent possible security problems. At present, this warns about calls to printf and scanf functions where the format string is not a string literal and there are no format arguments, as in printf (foo);. This may be a security hole if the format string came from untrusted input and contains `%n'.">
    <EnumValue Name="Disable" DisplayName="Disable" />
    <EnumValue Name="Warning" DisplayName="Warning" />
    <EnumValue Name="Error" DisplayName="Error" />
  </EnumProperty>
  <BoolProperty Name="EchoCommandLines" DisplayName="Echo Command Lines" Category="General" />

  <!-- Optimization -->
  <EnumProperty Name="OptimizationLevel" DisplayName="Optimization" Category="Optimization">
    <EnumValue Name="O0" DisplayName="No Optimization" />
    <EnumValue Name="O1" DisplayName="Optimization Flag -O1" />
    <EnumValue Name="O2" DisplayName="Optimization Flag -O2" />
    <EnumValue Name="O3" DisplayName="Optimization Flag -O3" />
    <EnumValue Name="Os" DisplayName="Optimize for size" />
  </EnumProperty>
  <BoolProperty Name="ThumbMode" DisplayName="Thumb Mode (ARM only)" Category="Optimization" Switch="D __VA_THUMB" />
  <BoolProperty Name="Neon" DisplayName="NEON Intrinsics (ARM only)" Category="Optimization" Description="Allows the use of ARM Advanced SIMD (a.k.a. NEON) GCC intrinsics in your C and C++ sources." />
  <BoolProperty Name="StrictAliasing" DisplayName="Strict Aliasing" Category="Optimization" />
  <BoolProperty Name="UnswitchLoops" DisplayName="Unswitch Loops" Category="Optimization" Description="Move branches with loop invariant conditions out of the loop, with duplicates of the loop on both branches (modified according to result of the condition). " />
  <IntProperty Name="InlineLimit" DisplayName="Inline Limit (GCC only)" Category="Optimization" Description="By default, GCC limits the size of functions that can be inlined. This flag allows coarse control of this limit. n is the size of functions that can be inlined in number of pseudo instructions." />
  <BoolProperty Name="OmitFramePointer" DisplayName="Omit Frame Pointer" Category="Optimization" />
  
  <!-- Preprocessor -->
  <StringListProperty Name="PreprocessorDefinitions" DisplayName="Preprocessor Definitions" Category="Preprocessor" Switch="D" />

  <!-- Code Generation -->
  <BoolProperty Name="GccExceptionHandling" DisplayName="Enable C++ Exceptions" Category="Code Generation" Switch="D __VA_EXCEPTIONS=1" ReverseSwitch="D __VA_EXCEPTIONS=0" />
  <BoolProperty Name="PositionIndependentCode" DisplayName="Generate Position-Independent Code" Category="Code Generation" Switch="D __VA_PIC=1" ReverseSwitch="D __VA_PIC=" />
  <BoolProperty Name="StackProtector" DisplayName="Stack Protection" Category="Code Generation" />

  <!-- Language -->
  <BoolProperty Name="RuntimeTypeInfo" DisplayName="Enable Run-Time Type Information" Category="Language" Switch="D __VA_RTTI=1" ReverseSwitch="D __VA_RTTI=0" />
  <BoolProperty Name="ShortEnums" DisplayName="Short Enums" Category="Language" Switch="D __VA_SHORT_ENUMS" />
  <BoolProperty Name="ShortWChar" DisplayName="Short wchar_t" Category="Language" Description="Override the underlying type for ‘wchar_t’ to be ‘short unsigned int’ instead of the default for the target." Switch="D __VA_SHORT_WCHAR" />

  <!-- Precompiled Headers -->
  <EnumProperty Name="PrecompiledHeader" DisplayName="Precompiled Header" Category="Precompiled Headers">
    <EnumValue Name="Create" DisplayName="Create" />
    <EnumValue Name="Use" DisplayName="Use" />
    <EnumValue Name="NotUsing" DisplayName="Not Using Precompiled Headers" />
  </EnumProperty>
  <StringProperty Subtype="file" Name="PrecompiledHeaderOutputFile" DisplayName="Precompiled Header Output File" Category="Precompiled Headers" />
  
  <!-- Output Files -->
  <StringProperty Subtype="file" Name="ObjectFileName" DisplayName="Object File Name" Category="Output Files" />
  
  <!-- Advanced -->
  <EnumProperty Name="CompileAs" DisplayName="Compile As" Category="Advanced">
    <EnumValue Name="Default" DisplayName="Default" />
    <EnumValue Name="CompileAsC" DisplayName="Compile as C Code" Switch="TC" />
    <EnumValue Name="CompileAsCpp" DisplayName="Compile as C++ Code" Switch="TP" />
    <EnumValue Name="CompileAsAsm" DisplayName="Compile as Assembly Code" />
    <EnumValue Name="CompileAsCHeader" DisplayName="Compile as C Compiled Header" Switch="TC" />
    <EnumValue Name="CompileAsCppHeader" DisplayName="Compile as C++ Compiled Header" Switch="TP" />
  </EnumProperty>
  <StringProperty Subtype="file" Name="ForcedIncludeFiles" DisplayName="Forced Include File" Category="Advanced" Switch="FI" />

  <!-- Hidden -->
  <BoolProperty Name="IgnoreVaListWarning" Category="General" Visible="false" />
  <!-- NoExecStack is controlled in tandem for both compiling and linking by general property NoExecStack -->
  <BoolProperty Name="NoExecStack" Category="General" Visible="false" />

  <!-- Command Line -->
  <StringProperty Name="AdditionalOptions" DisplayName="Additional Options" Description="Additional Options" Category="Command Line" />

  <!--
    This property must remain at the end of the file to allow users to override it.
  -->
  <StringListProperty Subtype="folder" Name="IntellisenseIncludeDirectories" Category="General" Visible="false" Switch="I" />

</Rule>